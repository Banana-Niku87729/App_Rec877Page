<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>404 - ページが見つかりません</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #0c0c0c 0%, #1a1a1a 50%, #2d2d2d 100%);
            color: #ffffff;
            height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* 背景の粒子エフェクト */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: #00ffff;
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { 
                transform: translateY(0px) rotate(0deg);
                opacity: 0.3;
            }
            50% { 
                transform: translateY(-100px) rotate(180deg);
                opacity: 1;
            }
        }

        /* グリッド背景 */
        .grid-bg {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
            background-size: 50px 50px;
            animation: grid-move 20s linear infinite;
            z-index: 1;
        }

        @keyframes grid-move {
            0% { transform: translate(0, 0); }
            100% { transform: translate(50px, 50px); }
        }

        .container {
            position: relative;
            z-index: 10;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            text-align: center;
            padding: 20px;
        }

        .error-code {
            font-size: clamp(8rem, 20vw, 20rem);
            font-weight: 900;
            background: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00);
            background-size: 400% 400%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradient-shift 3s ease-in-out infinite, glitch 0.3s ease-in-out infinite alternate;
            text-shadow: 0 0 30px rgba(0, 255, 255, 0.5);
            margin-bottom: 1rem;
            position: relative;
        }

        @keyframes gradient-shift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        @keyframes glitch {
            0% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
            100% { transform: translate(0); }
        }

        .error-title {
            font-size: clamp(1.5rem, 4vw, 3rem);
            margin-bottom: 1rem;
            color: #ffffff;
            text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
            animation: pulse 2s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        .error-message {
            font-size: clamp(1rem, 2.5vw, 1.2rem);
            margin-bottom: 2rem;
            color: #cccccc;
            max-width: 600px;
            line-height: 1.6;
        }

        .buttons {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            justify-content: center;
        }

        .btn {
            padding: 15px 30px;
            font-size: 1rem;
            font-weight: 600;
            text-decoration: none;
            border: 2px solid transparent;
            border-radius: 50px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            cursor: pointer;
            display: inline-block;
        }

        .btn-primary {
            background: linear-gradient(45deg, #00ffff, #0080ff);
            color: #000;
            box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0, 255, 255, 0.5);
        }

        .btn-secondary {
            background: transparent;
            color: #ffffff;
            border: 2px solid #ffffff;
        }

        .btn-secondary:hover {
            background: #ffffff;
            color: #000;
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(255, 255, 255, 0.3);
        }

        /* スキャンライン効果 */
        .scanline {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, #00ffff, transparent);
            animation: scan 2s linear infinite;
            z-index: 5;
        }

        @keyframes scan {
            0% { transform: translateY(0); opacity: 1; }
            100% { transform: translateY(100vh); opacity: 0; }
        }

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            .buttons {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 200px;
            }
        }

        /* ホバー時のグロー効果 */
        .container:hover .error-code {
            text-shadow: 0 0 50px rgba(0, 255, 255, 0.8);
        }
    </style>
</head>
<body>
    <div class="grid-bg"></div>
    <div class="particles"></div>
    <div class="scanline"></div>
    
    <div class="container">
        <div class="error-code">404</div>
        <h1 class="error-title">ページが見つかりません</h1>
        <p class="error-message">
            お探しのページは移動または削除された可能性があります。<br>
            下記のボタンからホームページに戻るか、もう一度お試しください。
        </p>
        <div class="buttons">
            <a href="/" class="btn btn-primary">ホームに戻る</a>
            <a href="javascript:history.back()" class="btn btn-secondary">前のページに戻る</a>
        </div>
    </div>

    <script>
        // 粒子エフェクトの生成
        function createParticles() {
            const particlesContainer = document.querySelector('.particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                // ランダムな位置とアニメーション遅延
                particle.style.left = Math.random() * 100 + '%';
                particle.style.top = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 6 + 's';
                particle.style.animationDuration = (Math.random() * 3 + 3) + 's';
                
                particlesContainer.appendChild(particle);
            }
        }

        // ページ読み込み時に粒子を生成
        document.addEventListener('DOMContentLoaded', createParticles);

        // マウス移動に応じてグリッドを動かす
        document.addEventListener('mousemove', (e) => {
            const gridBg = document.querySelector('.grid-bg');
            const x = (e.clientX / window.innerWidth) * 100;
            const y = (e.clientY / window.innerHeight) * 100;
            
            gridBg.style.transform = `translate(${x * 0.1}px, ${y * 0.1}px)`;
        });

        // エラーコードのクリック時のイースターエッグ
        document.querySelector('.error-code').addEventListener('click', () => {
            const errorCode = document.querySelector('.error-code');
            errorCode.style.animation = 'none';
            setTimeout(() => {
                errorCode.style.animation = 'gradient-shift 3s ease-in-out infinite, glitch 0.1s ease-in-out infinite alternate';
                setTimeout(() => {
                    errorCode.style.animation = 'gradient-shift 3s ease-in-out infinite, glitch 0.3s ease-in-out infinite alternate';
                }, 1000);
            }, 10);
        });
    </script>
</body>
</html>
